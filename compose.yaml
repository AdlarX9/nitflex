name: nitflex

services:
    # MongoDB Database
    mongodb:
        image: mongo:latest
        container_name: nitflex-mongodb
        restart: unless-stopped
        environment:
            MONGO_INITDB_DATABASE: nitflex
        ports:
            - "27017:27017"
        volumes:
            - ./mongodb_data:/data/db
        networks:
            - nitflex-network
        healthcheck:
            test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
            interval: 4s
            timeout: 2s
            retries: 5

    # Go API Backend
    api:
        build:
            context: .
            dockerfile: Dockerfile.api
        container_name: nitflex-api
        restart: unless-stopped
        environment:
            - MONGODB_URI=mongodb://mongodb:27017/nitflex
            - PORT=8080
        ports:
            - "8080:8080"
        volumes:
            - ${TEMP_DIR:-./uploads}:/app/uploads:rw
            - ${MOVIES_DIR:-./movies}:/app/movies:rw
            - ${SERIES_DIR:-./series}:/app/series:rw
        networks:
            - nitflex-network
        healthcheck:
            test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
            interval: 4s
            timeout: 2s
            retries: 5

    # React Frontend with Nginx
    frontend:
        build:
            context: .
            dockerfile: Dockerfile.frontend
        container_name: nitflex-frontend
        restart: unless-stopped
        ports:
            - "80:80"
        networks:
            - nitflex-network
        healthcheck:
            test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
            interval: 4s
            timeout: 2s
            retries: 5

networks:
    nitflex-network:
        driver: bridge
